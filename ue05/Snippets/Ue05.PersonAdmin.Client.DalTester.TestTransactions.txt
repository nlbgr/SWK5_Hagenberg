    public async Task TestTransactionsAsync() 
    {
      Person person1 = await personDao.FindByIdAsync(1);
      Person person2 = await personDao.FindByIdAsync(2);

      DateTime oldDate1 = person1.DateOfBirth;
      DateTime oldDate2 = person2.DateOfBirth;
      DateTime newDate1 = DateTime.MinValue;
      DateTime newDate2 = DateTime.MinValue;

      try
      {
        using (TransactionScope scope = 
                     new TransactionScope(TransactionScopeAsyncFlowOption.Enabled))
        {
          person1.DateOfBirth = newDate1 = oldDate1.AddDays(1);
          person2.DateOfBirth = newDate2 = oldDate2.AddDays(1);
          await personDao.UpdateAsync(person1);
          // throw new ArgumentException(); // comment this out to rollback transaction
          await personDao.UpdateAsync(person2);
          scope.Complete();
        }
      }
      catch
      {
      }

      person1 = await personDao.FindByIdAsync(1);
      person2 = await personDao.FindByIdAsync(2);

      if (oldDate1 == person1.DateOfBirth && oldDate2 == person2.DateOfBirth)
        Console.WriteLine("Transaction was ROLLED BACK.");
      else if (newDate1 == person1.DateOfBirth && newDate2 == person2.DateOfBirth)
        Console.WriteLine("Transaction was COMMITTED.");
      else
        Console.WriteLine("No Transaction.");
    }
